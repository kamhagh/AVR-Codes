
test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000194  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000001f8  00800060  00000194  00000208  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00000400  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000097  00000000  00000000  00000acc  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      0000002f  00000000  00000000  00000b63  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000b92  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000003e1  00000000  00000000  00000bc2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000001ac  00000000  00000000  00000fa3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000216  00000000  00000000  0000114f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000064  00000000  00000000  00001368  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000016d  00000000  00000000  000013cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000017a  00000000  00000000  00001539  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  000016b3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	12 e0       	ldi	r17, 0x02	; 2
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e9       	ldi	r30, 0x94	; 148
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 35       	cpi	r26, 0x58	; 88
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 8d 00 	call	0x11a	; 0x11a <main>
  7a:	0c 94 c8 00 	jmp	0x190	; 0x190 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <_Z9InitMusicv>:

void InitMusic()
{
	// Configure OC1B pin as output

	DDRD |= 1 << 4; //OC1B as output
  82:	8c 9a       	sbi	0x11, 4	; 17

	// timer1 configuration (for PWM)
    TCCR1A |= _BV(COM1B1);  // Clear OC1A/OC1B on compare match
  84:	8f b5       	in	r24, 0x2f	; 47
  86:	80 62       	ori	r24, 0x20	; 32
  88:	8f bd       	out	0x2f, r24	; 47

	
	TCCR1B |= _BV(WGM13) 	//mode 8, PWM, Phase and Frequency Correct (TOP value is ICR1)
		   |_BV(CS11); 		//prescaler(8)
  8a:	8e b5       	in	r24, 0x2e	; 46
  8c:	82 61       	ori	r24, 0x12	; 18
  8e:	8e bd       	out	0x2e, r24	; 46
  90:	08 95       	ret

00000092 <_Z9PlayMusicPKih>:
	Plays music.
*/

void PlayMusic( const int* pMusicNotes /** Pointer to table containing music data */,
				uint8_t tempo /** paying tempo from 0 to 100. Higher value = slower playback*/ )
{
  92:	ef 92       	push	r14
  94:	ff 92       	push	r15
  96:	0f 93       	push	r16
  98:	1f 93       	push	r17
  9a:	cf 93       	push	r28
  9c:	df 93       	push	r29
  9e:	fc 01       	movw	r30, r24
	int duration;
	int note;
	int i;
	uint16_t delay = tempo * 1000;
  a0:	88 ee       	ldi	r24, 0xE8	; 232
  a2:	93 e0       	ldi	r25, 0x03	; 3
  a4:	68 9f       	mul	r22, r24
  a6:	70 01       	movw	r14, r0
  a8:	69 9f       	mul	r22, r25
  aa:	f0 0c       	add	r15, r0
  ac:	11 24       	eor	r1, r1
			OCR1B = 0;
		}
		else
		{
			//not a pause, generate tone
			OCR1B = DEFAULT_VOLUME;
  ae:	a4 e6       	ldi	r26, 0x64	; 100
  b0:	b0 e0       	ldi	r27, 0x00	; 0
			ICR1H = (note >> 8);
			ICR1L = note;
		}

		//wait duration
		for(i=0;i<32-duration;i++)
  b2:	60 e2       	ldi	r22, 0x20	; 32
  b4:	70 e0       	ldi	r23, 0x00	; 0
  b6:	00 e0       	ldi	r16, 0x00	; 0
  b8:	10 e0       	ldi	r17, 0x00	; 0
	int duration;
	int note;
	int i;
	uint16_t delay = tempo * 1000;

	while( *pMusicNotes )
  ba:	21 c0       	rjmp	.+66     	; 0xfe <_Z9PlayMusicPKih+0x6c>
	{
		note = *pMusicNotes;
		pMusicNotes++;

		duration = *pMusicNotes;
  bc:	82 81       	ldd	r24, Z+2	; 0x02
  be:	93 81       	ldd	r25, Z+3	; 0x03

/**
	Plays music.
*/

void PlayMusic( const int* pMusicNotes /** Pointer to table containing music data */,
  c0:	34 96       	adiw	r30, 0x04	; 4
		pMusicNotes++;

		duration = *pMusicNotes;
		pMusicNotes++;

		if( p == note )
  c2:	21 30       	cpi	r18, 0x01	; 1
  c4:	31 05       	cpc	r19, r1
  c6:	19 f4       	brne	.+6      	; 0xce <_Z9PlayMusicPKih+0x3c>
		{
			//pause, do not generate any sound
			OCR1B = 0;
  c8:	19 bc       	out	0x29, r1	; 41
  ca:	18 bc       	out	0x28, r1	; 40
  cc:	08 c0       	rjmp	.+16     	; 0xde <_Z9PlayMusicPKih+0x4c>
		}
		else
		{
			//not a pause, generate tone
			OCR1B = DEFAULT_VOLUME;
  ce:	b9 bd       	out	0x29, r27	; 41
  d0:	a8 bd       	out	0x28, r26	; 40

			//set frequency
			ICR1H = (note >> 8);
  d2:	43 2f       	mov	r20, r19
  d4:	55 27       	eor	r21, r21
  d6:	47 fd       	sbrc	r20, 7
  d8:	5a 95       	dec	r21
  da:	47 bd       	out	0x27, r20	; 39
			ICR1L = note;
  dc:	26 bd       	out	0x26, r18	; 38
		}

		//wait duration
		for(i=0;i<32-duration;i++)
  de:	9b 01       	movw	r18, r22
  e0:	28 1b       	sub	r18, r24
  e2:	39 0b       	sbc	r19, r25
  e4:	c9 01       	movw	r24, r18
  e6:	18 16       	cp	r1, r24
  e8:	19 06       	cpc	r1, r25
  ea:	4c f4       	brge	.+18     	; 0xfe <_Z9PlayMusicPKih+0x6c>
  ec:	98 01       	movw	r18, r16
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
  ee:	e7 01       	movw	r28, r14
  f0:	21 97       	sbiw	r28, 0x01	; 1
  f2:	f1 f7       	brne	.-4      	; 0xf0 <_Z9PlayMusicPKih+0x5e>
  f4:	2f 5f       	subi	r18, 0xFF	; 255
  f6:	3f 4f       	sbci	r19, 0xFF	; 255
  f8:	28 17       	cp	r18, r24
  fa:	39 07       	cpc	r19, r25
  fc:	c1 f7       	brne	.-16     	; 0xee <_Z9PlayMusicPKih+0x5c>
	int duration;
	int note;
	int i;
	uint16_t delay = tempo * 1000;

	while( *pMusicNotes )
  fe:	20 81       	ld	r18, Z
 100:	31 81       	ldd	r19, Z+1	; 0x01
 102:	21 15       	cp	r18, r1
 104:	31 05       	cpc	r19, r1
 106:	d1 f6       	brne	.-76     	; 0xbc <_Z9PlayMusicPKih+0x2a>

	}
	

	//turn off any sound
	OCR1B = 0;
 108:	19 bc       	out	0x29, r1	; 41
 10a:	18 bc       	out	0x28, r1	; 40
}
 10c:	df 91       	pop	r29
 10e:	cf 91       	pop	r28
 110:	1f 91       	pop	r17
 112:	0f 91       	pop	r16
 114:	ff 90       	pop	r15
 116:	ef 90       	pop	r14
 118:	08 95       	ret

0000011a <main>:
};


main()
{
	InitMusic();
 11a:	0e 94 41 00 	call	0x82	; 0x82 <_Z9InitMusicv>

	while(1)
	{

		PlayMusic( octave, 40 );
 11e:	68 e2       	ldi	r22, 0x28	; 40
 120:	80 e6       	ldi	r24, 0x60	; 96
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	0e 94 49 00 	call	0x92	; 0x92 <_Z9PlayMusicPKih>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 128:	2f e3       	ldi	r18, 0x3F	; 63
 12a:	8d e0       	ldi	r24, 0x0D	; 13
 12c:	93 e0       	ldi	r25, 0x03	; 3
 12e:	21 50       	subi	r18, 0x01	; 1
 130:	80 40       	sbci	r24, 0x00	; 0
 132:	90 40       	sbci	r25, 0x00	; 0
 134:	e1 f7       	brne	.-8      	; 0x12e <main+0x14>
 136:	00 c0       	rjmp	.+0      	; 0x138 <main+0x1e>
 138:	00 00       	nop
		_delay_ms(1000);

		PlayMusic( furelise, 20 );
 13a:	64 e1       	ldi	r22, 0x14	; 20
 13c:	82 e8       	ldi	r24, 0x82	; 130
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	0e 94 49 00 	call	0x92	; 0x92 <_Z9PlayMusicPKih>
 144:	2f e3       	ldi	r18, 0x3F	; 63
 146:	8d e0       	ldi	r24, 0x0D	; 13
 148:	93 e0       	ldi	r25, 0x03	; 3
 14a:	21 50       	subi	r18, 0x01	; 1
 14c:	80 40       	sbci	r24, 0x00	; 0
 14e:	90 40       	sbci	r25, 0x00	; 0
 150:	e1 f7       	brne	.-8      	; 0x14a <main+0x30>
 152:	00 c0       	rjmp	.+0      	; 0x154 <main+0x3a>
 154:	00 00       	nop
		_delay_ms(1000);


		PlayMusic( starwars, 17 );
 156:	61 e1       	ldi	r22, 0x11	; 17
 158:	84 e2       	ldi	r24, 0x24	; 36
 15a:	91 e0       	ldi	r25, 0x01	; 1
 15c:	0e 94 49 00 	call	0x92	; 0x92 <_Z9PlayMusicPKih>
 160:	2f e3       	ldi	r18, 0x3F	; 63
 162:	8d e0       	ldi	r24, 0x0D	; 13
 164:	93 e0       	ldi	r25, 0x03	; 3
 166:	21 50       	subi	r18, 0x01	; 1
 168:	80 40       	sbci	r24, 0x00	; 0
 16a:	90 40       	sbci	r25, 0x00	; 0
 16c:	e1 f7       	brne	.-8      	; 0x166 <main+0x4c>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <main+0x56>
 170:	00 00       	nop
		_delay_ms(1000);

		PlayMusic( Jude, 35 );
 172:	63 e2       	ldi	r22, 0x23	; 35
 174:	86 eb       	ldi	r24, 0xB6	; 182
 176:	91 e0       	ldi	r25, 0x01	; 1
 178:	0e 94 49 00 	call	0x92	; 0x92 <_Z9PlayMusicPKih>
 17c:	2f e3       	ldi	r18, 0x3F	; 63
 17e:	8d e0       	ldi	r24, 0x0D	; 13
 180:	93 e0       	ldi	r25, 0x03	; 3
 182:	21 50       	subi	r18, 0x01	; 1
 184:	80 40       	sbci	r24, 0x00	; 0
 186:	90 40       	sbci	r25, 0x00	; 0
 188:	e1 f7       	brne	.-8      	; 0x182 <main+0x68>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <main+0x72>
 18c:	00 00       	nop
 18e:	c7 cf       	rjmp	.-114    	; 0x11e <main+0x4>

00000190 <_exit>:
 190:	f8 94       	cli

00000192 <__stop_program>:
 192:	ff cf       	rjmp	.-2      	; 0x192 <__stop_program>
